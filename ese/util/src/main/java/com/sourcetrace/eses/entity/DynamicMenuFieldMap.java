package com.sourcetrace.eses.entity;
// Generated 23 Jun, 2020 5:09:17 PM by Hibernate Tools 5.0.6.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * DynamicMenuFieldMap generated by hbm2java
 */
@Entity
@Table(name = "dynamic_menu_field_map")
public class DynamicMenuFieldMap implements java.io.Serializable {

	private Long id;
	private DynamicFeildMenuConfig menu;
	private DynamicFieldConfig field;
	
	private Long order;
	private Long isFilter;
	private Long scoreType;
	private String branch;
	private String beforeInsert;
	private String afterInsert;
	private String MBeforeInsert;
	private String MAfterInsert;
	private Set<DynamicFieldScoreMap> dynamicFieldScoreMap;
	public DynamicMenuFieldMap() {
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "ID", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Column(name = "ORDERZ")
	public Long getOrder() {
		return this.order;
	}

	public void setOrder(Long orderz) {
		this.order = orderz;
	}

	@Column(name = "IS_FILTER")
	public Long getIsFilter() {
		return this.isFilter;
	}

	public void setIsFilter(Long isFilter) {
		this.isFilter = isFilter;
	}

	@Column(name = "SCORE_TYPE")
	public Long getScoreType() {
		return this.scoreType;
	}

	public void setScoreType(Long scoreType) {
		this.scoreType = scoreType;
	}

	@Column(name = "BRANCH")
	public String getBranch() {
		return this.branch;
	}

	public void setBranch(String branch) {
		this.branch = branch;
	}

	@Column(name = "BEFORE_INSERT", length = 100)
	public String getBeforeInsert() {
		return this.beforeInsert;
	}

	public void setBeforeInsert(String beforeInsert) {
		this.beforeInsert = beforeInsert;
	}

	@Column(name = "AFTER_INSERT", length = 100)
	public String getAfterInsert() {
		return this.afterInsert;
	}

	public void setAfterInsert(String afterInsert) {
		this.afterInsert = afterInsert;
	}

	@Column(name = "M_BEFORE_INSERT", length = 100)
	public String getMBeforeInsert() {
		return this.MBeforeInsert;
	}

	public void setMBeforeInsert(String MBeforeInsert) {
		this.MBeforeInsert = MBeforeInsert;
	}

	@Column(name = "M_AFTER_INSERT", length = 100)
	public String getMAfterInsert() {
		return this.MAfterInsert;
	}

	public void setMAfterInsert(String MAfterInsert) {
		this.MAfterInsert = MAfterInsert;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MENU_ID",  insertable = false, updatable = false)
	public DynamicFeildMenuConfig getMenu() {
		return this.menu;
	}
	
	

	public void setMenu(DynamicFeildMenuConfig menu) {
		this.menu = menu;
	}

	

	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FIELD_ID",  insertable = false, updatable = false)
	public DynamicFieldConfig getField() {
		return field;
	}

	public void setField(DynamicFieldConfig dynamicFieldCondig) {
		this.field = dynamicFieldCondig;
	}
	@OneToMany( mappedBy = "dynamicMenuFieldMap")
	public Set<DynamicFieldScoreMap> getDynamicFieldScoreMap() {
		return dynamicFieldScoreMap;
	}

	public void setDynamicFieldScoreMap(Set<DynamicFieldScoreMap> dynamicFieldScoreMap) {
		this.dynamicFieldScoreMap = dynamicFieldScoreMap;
	}

	
	
}
