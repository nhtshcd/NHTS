package com.sourcetrace.eses.entity;
// Generated 23 Jun, 2020 5:09:17 PM by Hibernate Tools 5.0.6.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.FilterDef;
import org.hibernate.annotations.Filters;
import org.hibernate.annotations.ParamDef;

/**
 * Prof generated by hbm2java
 */
@Entity
 @FilterDef(name = "branchFilter", parameters = @ParamDef(name = "branchIdParam", type = "string"))@Filters(@org.hibernate.annotations.Filter(name="branchFilter", condition="branch_id in ( :branchIdParam )"))
@Table(name = "prof")
@Inheritance(strategy = InheritanceType.JOINED)
public class Profile implements java.io.Serializable {

    public static final String AGENT = "01";
    public static final String CLIENT = "02";
    public static final String CO_OPEARATIVE_MANAGER = "03";

    private static final int ES_AGENT_LENGTH = 12;
    private static final int ES_ID_LENGTH = 12;

    public final static int ACTIVE = 1;
    public final static int INACTIVE = 0;
    public final static int DELETED = 2;
    public final static int LOCKED = 4;

    public static final int OFFLINE = 0;
    public static final int ONLINE = 1;

    public static final int MAX_LENGTH_PROFILE_ID = 12;
	private Long id;
	private String profileId;
	private String profType;
	private String enrollId;
	private String enrollAgentId;
	private Integer status;
	private Date creTime;
	private Date updTime;
	private PersonalInfo personalInfo;
	private ContactInfo contInfo;
	private NomInfo nomInfo;
	private Long revisionNumber;
	private ImageInfo imageInfo;
	private String branchId;
	private Date createdDate;
	private Date updatedDate;
	private String createdUser;
	private String updatedUser;
	private String latitude;
	private String longitude;
	private String ipAddr;
	
	private ExporterRegistration exporter;
	

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "ID", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	@ManyToOne(fetch = FetchType.LAZY,cascade=CascadeType.ALL)
	@JoinColumn(name = "PERS_INFO_ID")
	public PersonalInfo getPersonalInfo() {
		return personalInfo;
	}

	public void setPersonalInfo(PersonalInfo personalInfo) {
		this.personalInfo = personalInfo;
	}
	
	@ManyToOne(fetch = FetchType.LAZY,cascade=CascadeType.ALL)
	@JoinColumn(name = "CONT_INFO_ID")
	public ContactInfo getContInfo() {
		return this.contInfo;
	}

	public void setContInfo(ContactInfo contInfoId) {
		this.contInfo = contInfoId;
	}
	
	public void setId(Long id) {
		this.id = id;
	}

	@Column(name = "PROF_ID",  length = 45)
	public String getProfileId() {
		return this.profileId;
	}

	public void setProfileId(String profId) {
		this.profileId = profId;
	}

	@Column(name = "PROF_TYPE",  length = 10)
	public String getProfType() {
		return this.profType;
	}

	public void setProfType(String profType) {
		this.profType = profType;
	}

	@Column(name = "ENROLL_ID", length = 45)
	public String getEnrollId() {
		return this.enrollId;
	}

	public void setEnrollId(String enrollId) {
		this.enrollId = enrollId;
	}

	@Column(name = "ENROLL_AGENT_ID", length = 45)
	public String getEnrollAgentId() {
		return this.enrollAgentId;
	}

	public void setEnrollAgentId(String enrollAgentId) {
		this.enrollAgentId = enrollAgentId;
	}

	@Column(name = "STATUS")
	public Integer getStatus() {
		return this.status;
	}

	public void setStatus(Integer status) {
		this.status = status;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CRE_TIME", length = 19)
	public Date getCreTime() {
		return this.creTime;
	}

	public void setCreTime(Date creTime) {
		this.creTime = creTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UPD_TIME", length = 19)
	public Date getUpdTime() {
		return this.updTime;
	}

	public void setUpdTime(Date updTime) {
		this.updTime = updTime;
	}

	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "NOM_INFO_ID")
public NomInfo getNomInfoId() {
		return this.nomInfo;
	}

	public void setNomInfoId(NomInfo nomInfoId) {
		this.nomInfo = nomInfoId;
	}

	@Column(name = "PROF_REV")
	public Long getRevisionNumber() {
		return revisionNumber;
	}

	public void setRevisionNumber(Long revisionNumber) {
		this.revisionNumber = revisionNumber;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IMAGE_INFO_ID")
	public ImageInfo getImageInfoId() {
		return this.imageInfo;
	}

	public void setImageInfoId(ImageInfo imageInfoId) {
		this.imageInfo = imageInfoId;
	}

	

	@Column(name = "BRANCH_ID", length = 50)
	public String getBranchId() {
		return this.branchId;
	}

	public void setBranchId(String branchId) {
		this.branchId = branchId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_DATE",  length = 19)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UPDATED_DATE",  length = 19)
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}

	@Column(name = "CREATED_USER", length = 50)
	public String getCreatedUser() {
		return this.createdUser;
	}

	public void setCreatedUser(String createdUser) {
		this.createdUser = createdUser;
	}

	@Column(name = "UPDATED_USER", length = 50)
	public String getUpdatedUser() {
		return this.updatedUser;
	}

	public void setUpdatedUser(String updatedUser) {
		this.updatedUser = updatedUser;
	}
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EXPORTER_ID")
	public ExporterRegistration getExporter() {
		return exporter;
	}

	public void setExporter(ExporterRegistration exporter) {
		this.exporter = exporter;
	}
	
	@Column(name = "LAT", length = 50, columnDefinition = "VARCHAR(255)")
	public String getLatitude() {
		return latitude;
	}

	public void setLatitude(String latitude) {
		this.latitude = latitude;
	}
	@Column(name = "LON", length = 50, columnDefinition = "VARCHAR(255)")
	public String getLongitude() {
		return longitude;
	}
	
	
	public void setLongitude(String longitude) {
		this.longitude = longitude;
	}
	@Column(name = "IP_ADDR", length = 50, columnDefinition = "VARCHAR(255)")
	public String getIpAddr() {
		return ipAddr;
	}

	public void setIpAddr(String ipAddr) {
		this.ipAddr = ipAddr;
	}
	

}
