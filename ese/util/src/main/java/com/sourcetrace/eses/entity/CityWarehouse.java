package com.sourcetrace.eses.entity;
// Generated 23 Jun, 2020 5:09:17 PM by Hibernate Tools 5.0.6.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.FilterDef;
import org.hibernate.annotations.Filters;
import org.hibernate.annotations.ParamDef;
import org.hibernate.annotations.UpdateTimestamp;

import lombok.Getter;
import lombok.Setter;
import org.hibernate.envers.*;

/**
 * CityWarehouse generated by hbm2java
 */
@Entity
@FilterDef(name = "branchFilter", parameters = @ParamDef(name = "branchIdParam", type = "string"))
@Filters(@org.hibernate.annotations.Filter(name = "branchFilter", condition = "branch_id in ( :branchIdParam )"))
@Table(name = "CITY_WAREHOUSE")
@Getter
@Setter
@Audited(targetAuditMode = RelationTargetAuditMode.NOT_AUDITED)
public class CityWarehouse implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	public static final int DELETED = 1;
	public static final int NOT_DELETED = 0;

	
	public static enum Stock_type{
		NA,HARVEST_STOCK,RECEPTION_STOCK ,PACKING_STOCK,PRODUCT_TRANSFER,PRODUCT_RECEPTION
	}
	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	private long id;
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CO_OPERATIVE_ID")
	private Packhouse coOperative;
	@Column(name = "IS_DELETE")
	private int isDelete;
	@Column(name = "REVISION_NO")
	private long revisionNo;
	@Column(name = "BRANCH_ID", length = 50)
	private String branchId;
    @NotAudited
    @OneToMany(mappedBy = "cityWarehouse", cascade = CascadeType.ALL)
    private Set<CityWarehouseDetail> cityWarehouseDetails = new HashSet<CityWarehouseDetail>(0);
	@Column(name = "BATCH_NO", length = 250)
	private String batchNo;
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "FARM_CROP_ID")
	private FarmCrops farmcrops;
	@Column(name = "HARVESTED_WEIGHT")
	private Double harvestedWeight;// harvested weight
	@Column(name = "LOSS_WEIGHT")
	private Double lossWeight;// loss weight
	@Column(name = "SORTED_WEIGHT")
	private Double sortedWeight;// sorted weight
	@Column(name = "CREATED_USER", length = 50, columnDefinition = "VARCHAR(255)")
	private String createdUser;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_DATE", length = 19)
	//@CreationTimestamp
	private Date createdDate;
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "LAST_HARVEST_DATE", length = 19)
	private Date lastHarvestDate;

	@Column(name = "UPDATED_USER", length = 50, columnDefinition = "VARCHAR(255)")
	private String updatedUser;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UPDATED_DATE", length = 19)
	@UpdateTimestamp
	private Date updatedDate;
	@Column(name = "STOCK_TYPE")
	private Integer stockType;
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PLANTING_ID")
	private Planting planting;
	
	@Column(name = "QR_CODE_ID")
	private String qrCodeId;
	
	@Column(name = "PACKING_BATCH")
	private String packBatch;
}
