package com.sourcetrace.eses.entity;
// Generated 23 Jun, 2020 5:09:17 PM by Hibernate Tools 5.0.6.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.FilterDef;
import org.hibernate.annotations.Filters;
import org.hibernate.annotations.ParamDef;
import org.hibernate.annotations.UpdateTimestamp;
import org.hibernate.annotations.Where;
import org.hibernate.envers.*;

/**
 * CatalogueValue generated by hbm2java
 */
@Entity
//@FilterDef(name = "branchFilter", parameters = @ParamDef(name = "branchIdParam", type = "string"))@Filters(@org.hibernate.annotations.Filter(name="branchFilter", condition="branch_id in ( :branchIdParam )"))
@Table(name = "CATALOGUE_VALUE")
@Audited(targetAuditMode = RelationTargetAuditMode.NOT_AUDITED)
public class FarmCatalogue implements java.io.Serializable {

	
	/*
	 * public static enum catelogueTypes { ANSWER, UNIT, DEFAULT_ANSWER,
	 * CUSTOMER_PROGRAM, COCOA_VARIETIES };
	 */

	public static final int FARM_EQUIPMENT = 1;
	public static final int ANIMAL_HUSBANDARY = 2;
	public static final int FOODER = 3;
	public static final int ANIMAL_HOUSING = 4;
	public static final int REVENUE = 5;
	public static final int UOM = 10;
	public static final int MAX_LENGTH_NAME = 35;
	public static final Integer CATEGORY = 12;

	public static final String ACTIVE = "1";
	public static final String INACTIVE = "0";

	public static final int OTHER = 99;

	public static final int ANSWER = 94;
	public static final int UNIT = 95;
	public static final int DEFAULT_ANSWER = 96;
	public static final int CUSTOMER_PROGRAM = 97;
	public static final int COCOA_VARIETIES = 98;

	public static final String NAME = "name";
	public static final String DISP_NAME = "dispName";
	
	
	private long id;
	private String code;
	private String name;
	private String dispName;
	//private FarmCatalogueMaster typez;
	private long revisionNo;
	private String branchId;
	private int isReserved;
	private String parentId;
	private String status;
	private int typez;
	private String createdUser;
	private Date createdDate;
	private String updatedUser;
	private Date updatedDate;
	
	private Set<LanguagePreferences> LanguagePreferences;

	

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "ID", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public int getTypez() {
		return typez;
	}

	public void setTypez(int typez) {
		this.typez = typez;
	}

	@Column(name = "CODE", length = 35)
	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Column(name = "NAME", length = 250)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "DISP_NAME", length = 250)
	public String getDispName() {
		return this.dispName;
	}

	public void setDispName(String dispName) {
		this.dispName = dispName;
	}
   

	@Column(name = "REVISION_NO")
	public Long getRevisionNo() {
		return this.revisionNo;
	}

	public void setRevisionNo(Long revisionNo) {
		this.revisionNo = revisionNo;
	}

	@Column(name = "BRANCH_ID", length = 50)
	public String getBranchId() {
		return this.branchId;
	}

	public void setBranchId(String branchId) {
		this.branchId = branchId;
	}

	@Column(name = "IS_RESERVED")
	public Integer getIsReserved() {
		return this.isReserved;
	}

	public void setIsReserved(Integer isReserved) {
		this.isReserved = isReserved;
	}

	@Column(name = "PARENT_ID", length = 10)
	public String getParentId() {
		return this.parentId;
	}

	public void setParentId(String parentId) {
		this.parentId = parentId;
	}

	@Column(name = "STATUS", length = 3)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}
	@OneToMany(cascade=CascadeType.ALL)
	@JoinColumn(name="code",referencedColumnName="code")
	@Where(clause = "LTYPE=0")
	public Set<LanguagePreferences> getLanguagePref() {
		return LanguagePreferences;
	}

	public void setLanguagePref(Set<LanguagePreferences> LanguagePreferences) {
		this.LanguagePreferences = LanguagePreferences;
	}

	/*@ManyToOne
	@JoinColumn(name = "TYPEZ",referencedColumnName="CATALOGUE_TYPEZ")
	public FarmCatalogueMaster getTypez() {
		return typez;
	}

	public void setTypez(FarmCatalogueMaster typez) {
		this.typez = typez;
	}*/
	
	/*
	 * @ManyToOne
	 * 
	 * @JoinColumn(name = "TYPEZ",referencedColumnName="CATALOGUE_TYPEZ") public
	 * FarmCatalogueMaster getTypez() { return this.typez; }
	 * 
	 * public void setTypez(FarmCatalogueMaster typez) { this.typez = typez; }
	 */
	
	@Column(name = "CREATED_USER", length = 50, columnDefinition = "VARCHAR(255)")
	public String getCreatedUser() {
		return createdUser;
	}

	public void setCreatedUser(String createdUser) {
		this.createdUser = createdUser;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_DATE",  length = 19)
	@CreationTimestamp
	public Date getCreatedDate() {
		return createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "UPDATED_USER", length = 50, columnDefinition = "VARCHAR(255)")
	public String getUpdatedUser() {
		return updatedUser;
	}

	public void setUpdatedUser(String updatedUser) {
		this.updatedUser = updatedUser;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UPDATED_DATE",  length = 19)
	@UpdateTimestamp
	public Date getUpdatedDate() {
		return updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}
	
}
