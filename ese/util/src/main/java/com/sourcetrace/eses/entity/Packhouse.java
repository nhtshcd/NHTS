package com.sourcetrace.eses.entity;
// Generated 24 Jun, 2020 6:21:14 PM by Hibernate Tools 5.0.6.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.annotations.FilterDef;
import org.hibernate.annotations.Filters;
import org.hibernate.annotations.Formula;
import org.hibernate.annotations.ParamDef;

import com.sourcetrace.eses.util.StringUtil;

import lombok.Getter;
import lombok.Setter;
import org.hibernate.envers.*;

/**
 * Warehouse generated by hbm2java
 */
@Entity
@FilterDef(name = "branchFilter", parameters = @ParamDef(name = "branchIdParam", type = "string"))
@Filters(@org.hibernate.annotations.Filter(name = "branchFilter", condition = "branch_id in ( :branchIdParam )"))
@Table(name = "warehouse")
@Getter
@Setter
@Audited
public class Packhouse implements java.io.Serializable {
      
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	public static enum WarehouseTypes {
		COOPERATIVE, SAMITHI, PROCUREMENT_PLACE, GINNER, SPINNER
	}
    
	public static final int PRODUCT_DISTRIBUTION_CENTER = 1;
	public static final int FIELD_COLLECTION_CENTER = 0;

	public static final Integer COOPERATIVE = 0;
	public static final Integer SAMITHI = 1;
	public static final Integer PROCUREMENT_PLACE = 2;
	public static final Integer GINNER = 3;
	public static final Integer SPINNING=4;
	public static final Integer[] WarehouseTypesArray = { 1, 2, 3, 4 };
	public static final Integer[] WarehouseTypeArray = { 0, 2, 3, 4 };
	
	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "ID", unique = true, nullable = false)
	private Long id;
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "REF_WAREHOUSE_ID")
	private Packhouse refCooperative;
	@Column(name = "NAME", length = 45,columnDefinition = "VARCHAR(255)")
	private String name;
	@Column(name = "CODE", length = 45,columnDefinition = "VARCHAR(20)")
	private String code;
	@Column(name = "LOCATION", length = 45,columnDefinition = "VARCHAR(45)")
	private String location;
	@Column(name = "ADDRESS", length = 45,columnDefinition = "VARCHAR(255)")
	private String address;
	@Column(name = "PHONE_NO", length = 45,columnDefinition = "VARCHAR(255)")
	private String phoneNo;
	@Column(name = "WAREHOUSE_INCHARGE", length = 45,columnDefinition = "VARCHAR(255)")
	private String warehouseIncharge;
	@Column(name = "REVISION_NO", length = 45,columnDefinition = "VARCHAR(255)")
	private Long revisionNo;
	@Column(name = "TYPEZ", length = 45,columnDefinition = "VARCHAR(255)")
	private Integer typez;
	@Column(name = "BRANCH_ID", length = 45,columnDefinition = "VARCHAR(255)")
	private String branchId;
	@Column(name = "CREATED_DATE")
	private Date createdDate;
	@Column(name = "UPDATED_DATE")
	private Date updatedDate;
	@Column(name = "CREATED_USERNAME", length = 45,columnDefinition = "VARCHAR(255)")
	private String createdUser;
	@Column(name = "UPDATED_USERNAME", length = 45,columnDefinition = "VARCHAR(255)")
	private String updatedUser;
	@Column(name = "Status", length = 5)
	private Integer status;
	@Column(name = "LAT", length = 50, columnDefinition = "VARCHAR(255)")
	private String latitude;
	@Column(name = "LON", length = 50, columnDefinition = "VARCHAR(255)")
	private String longitude;
	@Column(name = "IP_ADDR", length = 50, columnDefinition = "VARCHAR(255)")
	private String ipAddr;
	
		
	@ManyToOne(fetch = FetchType.EAGER,cascade=CascadeType.ALL)
	@JoinColumn(name = "EXPORTER")
	private ExporterRegistration exporter;
	
	
		
}
