package com.sourcetrace.eses.entity;
// Generated 23 Jun, 2020 5:09:17 PM by Hibernate Tools 5.0.6.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.FilterDef;
import org.hibernate.annotations.Filters;
import org.hibernate.annotations.ParamDef;
import org.hibernate.annotations.UpdateTimestamp;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * Customer generated by hbm2java
 */
@Entity
@FilterDef(name = "branchFilter", parameters = @ParamDef(name = "branchIdParam", type = "string"))
@Filters(@org.hibernate.annotations.Filter(name = "branchFilter", condition = "branch_id in ( :branchIdParam )"))

@Table(name = "CUSTOMER")
public class Customer implements java.io.Serializable {

	private Long id;
	private Locality locationDetail;
	private String customerId;
	private String customerName;
	private String customerType;
	private String customerSegment;
	private String customerAddress;
	private String landline;
	private String personName;
	private String mobileNo;
	private String emailId;
	private Long revisionNo;
	private String branchId;
	private Municipality city;
	private Integer status;
	private String createdUser;
	private Date createdDate;
	private String updatedUser;
	private Date updatedDate;
	private String latitude;
	private String longitude;
	private String ipAddr;
	private ExporterRegistration exporter;

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "ID", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

/*	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CITY_ID")
	@JsonIgnore
	public Locality getLocationDetail() {
		return this.locationDetail;
	}

	public void setLocationDetail(Locality locationDetail) {
		this.locationDetail = locationDetail;
	}*/

	@Column(name = "CUSTOMER_ID", length = 20)
	public String getCustomerId() {
		return this.customerId;
	}

	public void setCustomerId(String customerId) {
		this.customerId = customerId;
	}

	@Column(name = "CUSTOMER_NAME", length = 45)
	public String getCustomerName() {
		return this.customerName;
	}

	public void setCustomerName(String customerName) {
		this.customerName = customerName;
	}

	@Column(name = "CUSTOMER_TYPE", length = 20)
	public String getCustomerType() {
		return this.customerType;
	}

	public void setCustomerType(String customerType) {
		this.customerType = customerType;
	}

	@Column(name = "CUSTOMER_SEGMENT", length = 20)
	public String getCustomerSegment() {
		return this.customerSegment;
	}

	public void setCustomerSegment(String customerSegment) {
		this.customerSegment = customerSegment;
	}

	@Column(name = "CUSTOMER_ADDRESS")
	public String getCustomerAddress() {
		return this.customerAddress;
	}

	public void setCustomerAddress(String customerAddress) {
		this.customerAddress = customerAddress;
	}

	@Column(name = "LANDLINE", length = 15)
	public String getLandline() {
		return this.landline;
	}

	public void setLandline(String landline) {
		this.landline = landline;
	}

	@Column(name = "PERSON_NAME", length = 90)
	public String getPersonName() {
		return this.personName;
	}

	public void setPersonName(String personName) {
		this.personName = personName;
	}

	@Column(name = "MOBILE_NO", length = 20)
	public String getMobileNo() {
		return this.mobileNo;
	}

	public void setMobileNo(String mobileNo) {
		this.mobileNo = mobileNo;
	}

	@Column(name = "EMAIL_ID", length = 90)
	public String getEmailId() {
		return this.emailId;
	}

	public void setEmailId(String emailId) {
		this.emailId = emailId;
	}

	@Column(name = "REVISION_NO")
	public Long getRevisionNo() {
		return this.revisionNo;
	}

	public void setRevisionNo(Long revisionNo) {
		this.revisionNo = revisionNo;
	}

	@Column(name = "BRANCH_ID", length = 50)
	public String getBranchId() {
		return this.branchId;
	}

	public void setBranchId(String branchId) {
		this.branchId = branchId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TALUK_ID")
	@JsonIgnore
	public Municipality getCity() {
		return city;
	}

	public void setCity(Municipality city) {
		this.city = city;
	}

	@Column(name = "DELETE_STATUS")
	public Integer getStatus() {
		return status;
	}

	public void setStatus(Integer status) {
		this.status = status;
	}

	@Column(name = "CREATED_USER", length = 50, columnDefinition = "VARCHAR(255)")
	public String getCreatedUser() {
		return createdUser;
	}

	public void setCreatedUser(String createdUser) {
		this.createdUser = createdUser;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_DATE",  length = 19)
	@CreationTimestamp
	public Date getCreatedDate() {
		return createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Column(name = "UPDATED_USER", length = 50, columnDefinition = "VARCHAR(255)")
	public String getUpdatedUser() {
		return updatedUser;
	}

	public void setUpdatedUser(String updatedUser) {
		this.updatedUser = updatedUser;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UPDATED_DATE",  length = 19)
	@UpdateTimestamp
	public Date getUpdatedDate() {
		return updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}
	@Column(name = "LAT", length = 50, columnDefinition = "VARCHAR(255)")
	public String getLatitude() {
		return latitude;
	}

	public void setLatitude(String latitude) {
		this.latitude = latitude;
	}
	@Column(name = "LON", length = 50, columnDefinition = "VARCHAR(255)")
	public String getLongitude() {
		return longitude;
	}
	
	
	public void setLongitude(String longitude) {
		this.longitude = longitude;
	}

	@Column(name = "IP_ADDR", length = 50, columnDefinition = "VARCHAR(255)")
	public String getIpAddr() {
		return ipAddr;
	}

	public void setIpAddr(String ipAddr) {
		this.ipAddr = ipAddr;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EXPORTER_ID")
	public ExporterRegistration getExporter() {
		return exporter;
	}

	public void setExporter(ExporterRegistration exporter) {
		this.exporter = exporter;
	}
}
