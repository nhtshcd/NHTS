package com.sourcetrace.eses.action;
// Generated 23 Jun, 2020 5:09:17 PM by Hibernate Tools 5.0.6.Final

import java.util.List;
import java.util.Set;

import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.sourcetrace.eses.entity.Menu;
import com.sourcetrace.eses.filter.ISecurityFilter;
import com.sourcetrace.eses.util.ObjectUtil;

/**
 * EseAction generated by hbm2java
 */

public class ESEAction extends SwitchAction {

	@Override
	public void setServletResponse(HttpServletResponse res) {

		response = res;
		response.setCharacterEncoding("UTF-8");
	}

	public void setServletRequest(HttpServletRequest req) {

		this.request = req;
	}

	public String getUsername() {

		String username = (String) request.getSession().getAttribute("user");

		if (username == null) {
			username = "";
		}
		return username;
	}
	@Override
	public void setServletContext(ServletContext context) {

		this.context = context;
	}
	public void localizeMenu() {
		if (!ObjectUtil.isEmpty(request) && !ObjectUtil.isEmpty(request.getSession())
				&& (ObjectUtil.isEmpty(request.getSession().getAttribute("menuLocalize"))
						|| !request.getSession().getAttribute("menuLocalize").equals("done"))) {
			List<Menu> userMenus = (List<Menu>) request.getSession().getAttribute(ISecurityFilter.MENU);
			if (userMenus != null && request.getSession().getAttribute("localize") != null) {
				String language = (String) request.getSession().getAttribute(ISecurityFilter.LANGUAGE);
				for (Menu userMenu : userMenus) {
					Object[] menuInfo = utilService.findMenuInfo(userMenu.getId());
					userMenu.setMenuClassName(menuInfo[1] + "");
					if (menuInfo[1].toString().contains("service.dynamicCertification")
							|| menuInfo[1].toString().contains("report.dynmaicCertification")) {
						userMenu.setLabel(getMenuLabel(menuInfo));
					} else if (menuInfo[2].toString().contains("dynamicViewReport")) {
						userMenu.setLabel(getDynamicViewReportLabel(menuInfo));
					} else {
						userMenu.setLabel(getLocaleProperty(menuInfo[1].toString()));
					}
					// userMenu.setLabel(getLocaleProperty(menuInfo[1]));
					Set<Menu> subMenus = userMenu.getSubMenus();

					for (Menu smenu : subMenus) {
						Object[] smenuInfo = utilService.findMenuInfo(smenu.getId());
						smenu.setMenuClassName(smenuInfo[1] + "");
						if (smenuInfo[1].toString().contains("service.dynamicCertification")
								|| smenuInfo[1].toString().contains("report.dynmaicCertification")) {
							smenu.setLabel(getMenuLabel(smenuInfo));
						} else if (smenuInfo[2].toString().contains("dynamicViewReport")) {
							smenu.setLabel(getDynamicViewReportLabel(smenuInfo));
						} else {
							smenu.setLabel(getLocaleProperty(smenuInfo[1].toString()));
						}
						// smenu.setLabel(getLocaleProperty(smenuInfo[1]));
						Set<Menu> subSubMenus = smenu.getSubMenus();

						for (Menu ssmenu : subSubMenus) {
							Object[] ssmenuInfo = utilService.findMenuInfo(ssmenu.getId());
							System.out.println(ssmenu.getId());
							try {
								ssmenu.setMenuClassName(ssmenuInfo[1] + "");
							} catch (NullPointerException e) {
								System.out.println("dd");
							}
							if (ssmenuInfo[1].toString().contains("service.dynamicCertification")
									|| ssmenuInfo[1].toString().contains("report.dynmaicCertification")) {
								ssmenu.setLabel(getMenuLabel(ssmenuInfo));
							} else if (ssmenuInfo[2].toString().contains("dynamicViewReport")) {
								ssmenu.setLabel(getDynamicViewReportLabel(ssmenuInfo));
							} else {
								ssmenu.setLabel(getLocaleProperty(ssmenuInfo[1].toString()));
							}
						}
					}
				}

				request.getSession().setAttribute("menuLocalize", "done");
				request.getSession().removeAttribute("localize");
			}
		}
	}
	
	
	
	
	


}
