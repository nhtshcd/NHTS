package com.sourcetrace.eses.entity;
// Generated 23 Jun, 2020 5:09:17 PM by Hibernate Tools 5.0.6.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.List;
import java.util.Set;
import java.util.SortedSet;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.annotations.FilterDef;
import org.hibernate.annotations.Filters;
import org.hibernate.annotations.ParamDef;
import org.hibernate.annotations.Type;
import org.hibernate.annotations.Where;
import org.hibernate.validator.constraints.NotEmpty;

import lombok.Getter;
import lombok.Setter;

/**
 * EseUser generated by hbm2java
 */
@Entity
 @FilterDef(name = "branchFilter", parameters = @ParamDef(name = "branchIdParam", type = "string"))@Filters(@org.hibernate.annotations.Filter(name="branchFilter", condition="branch_id in ( :branchIdParam )"))
@Table(name = "ese_user")
@Getter @Setter
public class User implements java.io.Serializable {

	public static enum userType1 {
		Admin, AgroChemical,SeedMerchant,Inspector,SeedInspector,Exproter,ExproterInspector
	}
	
	public static final String ADMIN_USER_NAME = "exec";
	
	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "ID", unique = true, nullable = false)
	private Long id;

	@ManyToOne(fetch = FetchType.LAZY,cascade=CascadeType.ALL)
	@JoinColumn(name = "CONT_INFO_ID",columnDefinition = "BIGINT(45)")
	private ContactInfo contInfo;

	@ManyToOne(fetch = FetchType.LAZY,cascade=CascadeType.ALL)
	@JoinColumn(name = "PERS_INFO_ID",columnDefinition = "BIGINT(45)")
	private PersonalInfo persInfo;

	@Column(name = "USER_NAME", length = 45,columnDefinition = "VARCHAR(255)")
	private String username;

	@Column(name = "PASSWORD",columnDefinition = "VARCHAR(255)")
	private String password;

	@Column(name = "STATUS",columnDefinition = "INTEGER")
	private Integer status;
	
	@Column(name = "DATA_ID",columnDefinition = "BIGINT(45)")
	private Long dataId;
	
	@Column(name = "ENABLE", length = 1,columnDefinition= "TINYINT")
	@Type(type = "org.hibernate.type.NumericBooleanType")
	private boolean isEnabled;

	@Column(name = "IS_RESET", length = 1,columnDefinition= "TINYINT")
	@Type(type = "org.hibernate.type.NumericBooleanType")
	private boolean reset;

	@Column(name = "LOGIN_STATUS",columnDefinition = "INTEGER")
	private Integer loginStatus;

	@Column(name = "IS_AGENT",columnDefinition = "INTEGER")
	private Integer isAgent;

	@Column(name = "branch_id", length = 50,columnDefinition = "VARCHAR(255)")
	private String branchId;

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATED_DATE",  length = 19)
	private Date createdDate;
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UPDATED_DATE",  length = 19)
	private Date updatedDate;

	@Column(name = "CREATED_USER", length = 50,columnDefinition = "VARCHAR(255)")
	private String createdUser;
	
	@Column(name = "UPDATED_USER", length = 50,columnDefinition = "VARCHAR(255)")
	private String updatedUser;
	
	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "ese_user_ent", joinColumns = {
			@JoinColumn(name = "ESE_USER_ID",  updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "ESE_ENT_ID",  updatable = false) })
	private Set<Entitlement> entitlements;

	@NotEmpty(message = "empty.language")
	@Column(name = "LANG", length = 5,columnDefinition = "VARCHAR(255)")
	private String language;
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ESE_ROLE_ID",columnDefinition = "BIGINT(45)")
	private Role role;
	
	@Column(name = "UPDATE_SEC",columnDefinition = "BIGINT(45)")
	private long milliSecond = 0;
	
	@Column(name="DEALER_ID",columnDefinition = "VARCHAR(255)")
	private Long agroChDealer;

	@Column(name="USER_TYPE",columnDefinition = "INTEGER")
	private Integer userType;

	@Column(name = "EXPIRE_DATE")
	private Date expireDate;
	
	@Column(name = "LAST_LOGIN_DATE")
	private Date lastLoginDate;
	
	@Column(name = "LAT", length = 50, columnDefinition = "VARCHAR(255)")
	private String latitude;
	
	@Column(name = "LON", length = 50, columnDefinition = "VARCHAR(255)")
	private String longitude;
	
	@Column(name = "IP_ADDR", length = 50, columnDefinition = "VARCHAR(255)")
	private String ipAddr;
	
	@Transient
	private List<String> branchesList;

	@Transient
	private String branchFiletr;

	@Transient
	private boolean isAdmin;
	@Transient
	private String filterStatus;

	@Transient
	private String isMultiBranch;

	@Transient
	private String parentBranchId;
	@Transient
	private boolean changePassword;

	@Transient
	private String confirmPassword;
	@Transient
	  private String oldPassword;
   @Transient
   private String searchPage;
	
   @Column(name="SIGNATURE", length = 50)
	private Long signature;
   
   @OneToMany(mappedBy = "referenceId", orphanRemoval = true)
	@OrderBy(value = "createdDate desc")
	@Where(clause = "type = 0")
	private SortedSet<PasswordHistory> passwordHistory;
}

 /*{"0":"Admin","1":"AgroChemical dealer","2":"Inspector","3":"Nhts Admin"}*/
